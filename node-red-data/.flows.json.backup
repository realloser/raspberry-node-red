[{"id":"1097440f.3027cc","type":"tab","label":"Convert Sensor string payload to json payload ","disabled":false,"info":""},{"id":"cc7b94bf.ada97","type":"tab","label":"Wake On Lan","disabled":false,"info":""},{"id":"ad3b9fa2.8981e","type":"tab","label":"OpenWeather","disabled":false,"info":""},{"id":"d80d4b56.406dd8","type":"mqtt-broker","z":"","name":"black-pearl","broker":"mosquitto-arm","port":"1883","clientid":"node-red","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"birthTopic":"M18/node-red","birthQos":"0","birthRetain":"true","birthPayload":"alive","closeTopic":"M18/node-red","closeQos":"0","closeRetain":"true","closePayload":"disconnecting","willTopic":"M18/node-red","willQos":"0","willRetain":"true","willPayload":"unexpected disconnection"},{"id":"aff3585.d71bea8","type":"mqtt in","z":"1097440f.3027cc","name":"Receive Environment Data","topic":"M18/Environment","qos":"0","broker":"d80d4b56.406dd8","x":124.5,"y":207,"wires":[["6cfdf8b1.c83258","a962fe01.7ad468"]]},{"id":"6cfdf8b1.c83258","type":"debug","z":"1097440f.3027cc","name":"debug mqtt message","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":582.5,"y":68,"wires":[]},{"id":"22b0cbb6.cd168c","type":"function","z":"1097440f.3027cc","name":"convert payload to json","func":"\nconst environmentStringToObject = (message) => {\n    const seperated = message.split('|')\n        .filter(v => Boolean(v)); // filter out dummy values\n    \n    const toValue = (value) => {\n        const intValue = parseInt(value);\n        if (isNaN(intValue) || value === '-1') {\n            return -1;\n        }\n        return intValue/100;  \n    };\n    \n    const returnValue = {\n        msgid: msg._msgid,\n        timeStamp: new Date().getTime(),\n        node: seperated[0],\n        messageIndex: parseInt(seperated[1]),\n        primary_temperature: toValue(seperated[2]),\n        humidity: toValue(seperated[3]),\n        light_intensity: parseInt(seperated[4]),\n        batt: toValue(seperated[5]),\n        secondary_temperature: toValue(seperated[6]),\n        pressure: toValue(seperated[7]),\n    };\n    return returnValue\n}\n\nconst payload = environmentStringToObject(msg.payload);\n\nreturn { \n    topic: `M18/Environment/${payload.node}`,\n    qos: 0,\n    retain: false,\n    payload: payload};","outputs":1,"noerr":0,"x":756.5,"y":311,"wires":[["cc4af057.6f1f18","eb9a7af0.82f548"]]},{"id":"cc4af057.6f1f18","type":"debug","z":"1097440f.3027cc","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":986.5,"y":246,"wires":[]},{"id":"eb9a7af0.82f548","type":"mqtt out","z":"1097440f.3027cc","name":"Expose Environment Json","topic":"","qos":"","retain":"","broker":"d80d4b56.406dd8","x":1039.5,"y":409,"wires":[]},{"id":"a962fe01.7ad468","type":"deduplicate","z":"1097440f.3027cc","name":"Deduplicate Payload","keyproperty":"","expiry":5,"x":420.5,"y":256,"wires":[["22b0cbb6.cd168c","57c6fdc3.f0c654"],["62c4eb53.2ffd9c"]]},{"id":"57c6fdc3.f0c654","type":"debug","z":"1097440f.3027cc","name":"Normal","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":704.5,"y":223,"wires":[]},{"id":"62c4eb53.2ffd9c","type":"debug","z":"1097440f.3027cc","name":"Duplicate","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":666.5,"y":370,"wires":[]},{"id":"5dcec8bc.c785e","type":"wake on lan","z":"cc7b94bf.ada97","mac":"","host":"","name":"Wake On Lan From Subscription","x":899.5,"y":310,"wires":[]},{"id":"14d97121.876d5f","type":"mqtt in","z":"cc7b94bf.ada97","name":"Wake On Lan Subscriber","topic":"M18/WOL/+","qos":"0","broker":"d80d4b56.406dd8","x":216.5,"y":146,"wires":[["ddde5ca6.69d478","b2b624dc.8be89"]]},{"id":"ddde5ca6.69d478","type":"debug","z":"cc7b94bf.ada97","name":"WOL Message","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":573.5,"y":68,"wires":[]},{"id":"b2b624dc.8be89","type":"function","z":"cc7b94bf.ada97","name":"Convert topic to mac address","func":"const response = Object.assign({}, {\n    mac: msg.topic.split('/').splice(-1)[0].toUpperCase()\n}, msg);\n\nreturn response;","outputs":1,"noerr":0,"x":550.5,"y":218,"wires":[["88532634.b62a2","5dcec8bc.c785e"]]},{"id":"88532634.b62a2","type":"debug","z":"cc7b94bf.ada97","name":"Extracted mac address","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":878.5,"y":139,"wires":[]},{"id":"6b977061.9ef1f8","type":"openweathermap in","z":"ad3b9fa2.8981e","name":"Data for Bern","wtype":"current","lon":"","lat":"","city":"Bern","country":"Switzerland","language":"de","x":162.5,"y":206,"wires":[[]]},{"id":"717a961a.453858","type":"debug","z":"ad3b9fa2.8981e","name":"OpenWather Payload","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":415.5,"y":125,"wires":[]},{"id":"42e58c25.941034","type":"openweathermap","z":"ad3b9fa2.8981e","name":"Data for Bern Triggered","wtype":"current","lon":"","lat":"","city":"Bern","country":"Switzerland","language":"de","x":297.5,"y":309,"wires":[["717a961a.453858","653caec7.8802"]]},{"id":"115234d2.d21913","type":"inject","z":"ad3b9fa2.8981e","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":114.5,"y":265,"wires":[["42e58c25.941034"]]},{"id":"f3e12e94.27f058","type":"debug","z":"ad3b9fa2.8981e","name":"MQTT Payload","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":656.5,"y":527,"wires":[]},{"id":"f3548dcb.2f4438","type":"trigger","z":"ad3b9fa2.8981e","op1":"1","op2":"0","op1type":"str","op2type":"str","duration":"5","extend":false,"units":"min","reset":"","bytopic":"all","name":"","x":132.5,"y":463,"wires":[[]]},{"id":"653caec7.8802","type":"function","z":"ad3b9fa2.8981e","name":"Convert node Data","func":"\n\nconst weatherToEnvironment = (weatherObject) => {\n\n    const returnValue = {\n        msgid: msg._msgid,\n        timeStamp: new Date().getTime(),\n        node: weatherObject.location,\n//        messageIndex: parseInt(seperated[1]),\n        primary_temperature: weatherObject.tempc,\n        humidity: weatherObject.humidity,\n        light_intensity: -1,\n        batt: -1,\n        secondary_temperature: -1,\n        pressure: weatherObject.pressure,\n        sourceData: weatherObject\n    };\n    return returnValue\n}\n\nconst payload = weatherToEnvironment(msg.payload);\n\nreturn { \n    topic: `Switzerland/Environment/${payload.node}`,\n    qos: 0,\n    retain: false,\n    payload: payload};","outputs":1,"noerr":0,"x":498.5,"y":390,"wires":[["f3e12e94.27f058"]]}]